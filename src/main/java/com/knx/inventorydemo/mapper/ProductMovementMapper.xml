<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.knx.inventorydemo.mapper.ProductMovementMapper">

    <resultMap id="MoveOutMap" type="com.knx.inventorydemo.entity.StockMoveOut">
        <id column="relative_id" property="relativeId" />
        <result column="product_id" property="productId" />
        <result column="update_date" property="date"/>
        <result column="quantity" property="quantity"/>
        <result column="used_uom" property="usedUOM"/>
        <result column="order_id" property="orderId"/>

        <result column="channel" property="salesChannel"/>
    </resultMap>

    <resultMap id="MoveInMap" type="com.knx.inventorydemo.entity.StockMoveIn">
        <id column="relative_id" property="relativeId" />
        <result column="product_id" property="productId" />
        <result column="update_date" property="date"/>
        <result column="quantity" property="quantity"/>
        <result column="used_uom" property="usedUOM"/>

        <result column="docs_id" property="docsId"/>
        <result column="row_of_item" property="itemRowOfDocs"/>
    </resultMap>

    
    <insert id="bulkInsertMoveIn" parameterType="java.util.List">
        insert into product_movement 
            (relative_id, product_id, update_date, quantity, used_uom, docs_id, row_of_item)
        values
        <foreach collection="moveIns" item="moveIn" index="index" open="(" separator="),(" close=")">
            #{moveIn.relativeId}, #{moveIn.productId}, #{moveIn.date}, #{moveIn.quantity}, #{moveIn.usedUOM}, #{moveIn.docsId}, #{moveIn.itemRowOfDocs}
        </foreach>
    </insert>
    
    <insert id="bulkInsertMoveOut" parameterType="java.util.List">
        insert into product_movement 
            (relative_id, product_id, update_date, quantity, used_uom, channel)
        values
        <foreach collection="moveOuts" item="moveOut" index="index" open="" separator="," close="">
            (#{moveOut.relativeId}, #{moveOut.productId}, #{moveOut.date}, #{moveOut.quantity}, #{moveOut.usedUOM}, #{moveOut.salesChannel})
        </foreach>
    </insert>

    <update id="bulkUpdateMoveIn" parameterType="java.util.List">
        <foreach collection="moveIns" item="moveIn" index="index" open=" " separator="" close="">
            update product_movement
                <trim prefix="set" suffixOverrides=",">
                    <!-- <if test="moveIn.relativeId != null">relative_id = #{moveIn.relativeId}</if> -->
                    <!-- <if test="moveIn.productId != null">product_id = #{moveIn.productId}</if> -->
                    <if test="moveIn.quantity != null">quantity = #{moveIn.quantity}</if>
                    <if test="moveIn.usedUOM != null">used_uom = #{moveIn.usedUOM}</if>
                    <if test="moveIn.date != null">update_date = #{moveIn.date}</if>
                    <!-- <if test="moveIn.docsId != null">docs_id = #{moveIn.docsId}</if> -->
                    <!-- <if test="moveIn.itemRowOfDocs != null">row_of_item = #{moveIn.itemRowOfDocs}</if> -->
                </trim>
            where relative_id = #{moveOut.relativeId} and docs_id = ${moveOut.docsId} and row_of_item = #{moveIn.itemRowOfDocs};
        </foreach>
    </update>

    <update id="bulkUpdateMoveOut" parameterType="java.util.List">
        <foreach collection="moveOuts" item="moveOut" index="index" open=" " separator="" close="">
            update product_movement
                <trim prefix="set" suffixOverrides=",">
                    <!-- <if test="moveOut.relativeId != null">relative_id = #{moveOut.relativeId}</if> -->
                    <!-- <if test="moveOut.productId != null">product_id = #{moveOut.productId}</if> -->
                    <if test="moveOut.quantity != null">quantity = #{moveOut.quantity}</if>
                    <if test="moveOut.usedUOM != null">used_uom = #{moveOut.usedUOM}</if>
                    <if test="moveOut.date != null">update_date = #{moveOut.date}</if>
                </trim>
            where relative_id = #{moveOut.relativeId} and channel = ${moveOut.salesChannel};
        </foreach>
    </update>

    <select id="bulkGetMoveIn" resultMap="MoveInMap">
        select * from product_movement
        where relative_id in
        <foreach collection="relativeIds" index="index" item="relativeId" open="(" close=")" separator=",">
            #{relativeId}
        </foreach>
    </select>

    <select id="bulkGetMoveOut" resultMap="MoveOutMap">
        select * from product_movement
        where relative_id in
        <foreach collection="relativeIds" index="index" item="relativeId" open="(" close=")" separator=",">
            #{relativeId}
        </foreach>
    </select>

    <select id="bulkGetMoveInByProductId" resultMap="MoveInMap">
        select * from product_movement
        where product_id in
        <foreach collection="productIds" index="index" item="productId" open="(" close=")" separator=",">
            #{productId}
        </foreach>
    </select>

    <select id="bulkGetMoveOutByProductId" resultMap="MoveOutMap">
        select * from product_movement
        where product_id in
        <foreach collection="productIds" index="index" item="productId" open="(" close=")" separator=",">
            #{productId}
        </foreach>
    </select>

    <select id="bulkGetMoveOutByOrderIdsAndProductIds" resultMap="MoveOutMap">
        select * from product_movement
        where product_id in 
        <foreach collection="movements" index="indexP" open="(" separator="," close=")" item="move">
            #{move.productId}
        </foreach>
        and order_id in
        <foreach collection="movements" index="indexO" open="(" separator="," close=")" item="move">
            #{move.OrderId}
        </foreach>
    </select>

    <select id="getExistsOrderIds">
        select distinct(order_id) from product_movement where in
        <foreach collection="orderIds" open="(" close=")" separator="," item="orderId">
            #{orderId}
        </foreach>
    </select>

    <select id="getExistsDocsIds">
        select distinct(docsId) from product_movement where in
        <foreach collection="docsIds" item="docsId" open="(" separator="," close=")">
            #{docsId}
        </foreach>
    </select>

    <resultMap id="Order" type="com.knx.inventorydemo.entity.Order">
        <result column="order_id" property="orderId"/>
        <result column="size" property="size"/>
    </resultMap>

    <select id="bulkGetRecordSizeOfOrderByOrderId" resultMap="Order">
        <foreach collection="orderIds" index="index" item="orderId" separator="UNION" open="" close="">
            select count(*) as size, #{orderId} as order_id from product_movement where order_id = #{orderId}
        </foreach>
    </select>

    <select id="bulkGetMoveInByProductIdInDate" resultMap="MoveInMap">
        select * from product_movement
        where product_id in
        <foreach collection="productIds" index="index" item="productId" open="(" close=")" separator=",">
            #{productId}
        </foreach>
        and update_date &gt; #{startDate} and update_date &lt; #{endDate}
    </select>

    <select id="bulkGetMoveOutByProductIdInDate" resultMap="MoveOutMap">
        select * from product_movement
        where product_id in
        <foreach collection="productIds" index="index" item="productId" open="(" close=")" separator=",">
            #{productId}
        </foreach>
        and update_date &gt; #{startDate} and update_date &lt; #{endDate}
    </select>

    <select id="bulkGetMoveInSpecifyDate" resultMap="MoveInMap">
        select * from product_movement
        where update_date &gt; #{startDate} and update_date &lt; #{endDate}
    </select>

    <select id="bulkGetMoveOutSpecifyDate" resultMap="MoveOutMap">
        select * from product_movement
        where update_date &gt; #{startDate} and update_date &lt; #{endDate}
    </select>

    <delete id="bulkDeleteMovements" parameterType="java.util.List">
        delete LOW_PRIORITY product_movement where product_id in
        <foreach collection="productIds" index="index" item="productId" open="(" close=")" separator=",">
            #{productId}
        </foreach>
        and relative_id in
        <foreach collection="relativeIds" index="index" item="relativeId" open="(" close=")" separator=",">
            #{relativeId}
        </foreach>
    </delete>

    <insert id="init">
        create table if not exists product_movement (
            relative_id varchar(20) not null,
            product_id varchar(20) not null,
            update_date date not null,
            quantity double not null,
            used_uom varchar(8) not null default "UNIT",
            channel varchar(8),
            order_id varchar(10),
            docs_id varchar(10),
            row_of_item int
        );
    </insert>
</mapper>